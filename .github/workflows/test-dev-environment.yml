name: Setup Development Environment

on:
  push:
    branches:
      - master  # Only trigger on push to master
  workflow_dispatch:  # Manually trigger the workflow via GitHub UI

jobs:
  test-script:
    runs-on: windows-latest  # Use a Windows runner

    steps:
    # Checkout the repository code
    - name: Checkout the code
      uses: actions/checkout@v3

    # Check if this is a merge commit
    - name: Check if merge commit
      id: check_merge
      run: |
        # PowerShell script to check for a merge commit
        $mergeCommit = git log --pretty=%P -n 1 HEAD
        if ($mergeCommit.Split().Count -gt 1) {
            Write-Host "This is a merge commit."
        } else {
            Write-Host "This is not a merge commit. Exiting."
            exit 0  # Exit early if not a merge commit
        }

    # Check for changes in the SetupDevEnv.ps1 script
    - name: Check for changes in SetupDevEnv.ps1
      id: check_changes
      run: |
        # Check if there are any changes in the SetupDevEnv.ps1 file
        git diff --exit-code --quiet HEAD^ HEAD -- SetupDevEnv.ps1 || echo "Changes detected"

    # Exit early if no changes in SetupDevEnv.ps1
    - name: Exit if no changes detected
      if: steps.check_changes.outputs.diff == 'Changes detected'
      run: |
        echo "No changes detected in SetupDevEnv.ps1, skipping the workflow."
        exit 0  # Exit early if no changes detected

    # Run the full PowerShell script
    - name: Run PowerShell Script
      run: |
        powershell -ExecutionPolicy Bypass -File ./SetupDevEnv.ps1

    # Verify installation of packages
    - name: Verify Installed Software
      run: |
        choco list --local-only
        git --version
        node --version
        python --version
